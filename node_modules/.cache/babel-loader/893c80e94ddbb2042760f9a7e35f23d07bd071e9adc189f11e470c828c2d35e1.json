{"ast":null,"code":"var _jsxFileName = \"C:\\\\sukhjot\\\\codeing\\\\url shortner\\\\client\\\\src\\\\components\\\\SignIn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { MDBInput, MDBBtn } from 'mdb-react-ui-kit';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // State variables\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Event handlers to update state\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n\n  // Form submission handler\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Your logic for handling the form submission with email and password\n      console.log('Email:', email);\n      console.log('Password:', password);\n\n      // Sending login request\n      let response = await axios.post('http://localhost:3000/api/v1/user/getUser', {\n        email,\n        password\n      });\n      console.log(response.data);\n      if (response.data.userName) {\n        dispatch({\n          type: 'setUser',\n          payload: {\n            userName: response.data.userName,\n            token: response.data.token\n          }\n        });\n\n        // Redirect to home page\n        history.push('/');\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      // Handle login error if needed\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n      className: \"mb-4\",\n      id: \"form1Example1\",\n      label: \"Email address\",\n      value: email,\n      onChange: handleEmailChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n      className: \"mb-4\",\n      type: \"password\",\n      id: \"form1Example2\",\n      label: \"Password\",\n      value: password,\n      onChange: handlePasswordChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n      type: \"submit\",\n      block: true,\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5/qlGBXGFoS3J0KY2tCjvQ5pyY4=\", false, function () {\n  return [useDispatch, useHistory];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MDBInput","MDBBtn","axios","useDispatch","useHistory","jsxDEV","_jsxDEV","App","_s","dispatch","history","email","setEmail","password","setPassword","handleEmailChange","e","target","value","handlePasswordChange","handleSubmit","preventDefault","console","log","response","post","data","userName","type","payload","token","push","error","onSubmit","children","className","id","label","onChange","fileName","_jsxFileName","lineNumber","columnNumber","block","_c","$RefreshReg$"],"sources":["C:/sukhjot/codeing/url shortner/client/src/components/SignIn.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { MDBInput, MDBBtn } from 'mdb-react-ui-kit';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  // State variables\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  // Event handlers to update state\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  // Form submission handler\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Your logic for handling the form submission with email and password\r\n      console.log('Email:', email);\r\n      console.log('Password:', password);\r\n\r\n      // Sending login request\r\n      let response = await axios.post(\r\n        'http://localhost:3000/api/v1/user/getUser',\r\n        {\r\n          email,\r\n          password,\r\n        }\r\n      );\r\n\r\n      console.log(response.data);\r\n      if (response.data.userName) {\r\n        dispatch({\r\n          type: 'setUser',\r\n          payload: {\r\n            userName: response.data.userName,\r\n            token: response.data.token,\r\n          },\r\n        });\r\n\r\n        // Redirect to home page\r\n        history.push('/');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n      // Handle login error if needed\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <MDBInput\r\n        className='mb-4'\r\n        id='form1Example1'\r\n        label='Email address'\r\n        value={email}\r\n        onChange={handleEmailChange}\r\n      />\r\n      <MDBInput\r\n        className='mb-4'\r\n        type='password'\r\n        id='form1Example2'\r\n        label='Password'\r\n        value={password}\r\n        onChange={handlePasswordChange}\r\n      />\r\n\r\n      <MDBBtn type='submit' block>\r\n        Sign in\r\n      </MDBBtn>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}